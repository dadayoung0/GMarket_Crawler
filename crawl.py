from bs4 import BeautifulSoup
from random import choice
from multiprocessing import Pool
import requests
import json
import csv
import re


class Item():
    title = ''
    sale_count = 0
    review_count = 0
    url = ''


class Gmarket():
    def __init__(self, save_dir: str):
        self.save_dir = save_dir

        headers = {
            'Connection': 'keep-alive',
            'accept': 'application/json',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36',
            'content-type': 'application/json',
            'Origin': 'http://category.gmarket.co.kr',
            'Referer': 'http://category.gmarket.co.kr/',
            'Accept-Language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
        }

        data = '[{"name":"Header","params":{"type":"sub","isAdult":false,"isSfc":false}}]'

        response = requests.post(
            'http://fnp.gmarket.co.kr/desktop-layout/models', headers=headers, data=data, verify=False)
        json_data = json.loads(response.text)[0]['categoryGroups']

        self.categories_1 = []
        self.categories_2 = []
        self.categories_3 = []
        for category1 in json_data:
            for category2 in category1['subgroups']:
                if category2['name'] != '':
                    for category3 in category2['categories']:
                        if '.aspx' not in category3['href'] and 'category=' not in category3['href']:
                            continue
                        self.categories_3.append([len(self.categories_1), len(
                            self.categories_2), category3['name'], category3['href']])
                    self.categories_2.append(
                        [len(self.categories_1), category2['name']])
            self.categories_1.append(category1['name'])

        self.result = []
        self.detail_categories = []

        before = 0
        for ctg in self.categories_3:
            if ctg[1] - before > 1:
                self.categories_2[before+1:ctg[1]] = ['']
            before = ctg[1]

        self.proxy_server_list = [
            "191.241.226.230:53281",
            "41.222.209.12:808",
            "118.185.38.153:35101",
            "213.230.90.106:3128",
            "115.75.1.184:8118",
            "182.253.171.210:8080",
            "85.195.104.71:80",
            "41.203.37.20:6969",
            "190.104.3.244:6969",
            "91.225.226.39:44388",
            "103.130.141.98:8080",
            "201.217.12.212:8080",
            "187.251.138.81:3128",
            "12.127.133.62:48678",
            "201.222.45.64:999",
            "185.37.211.222:50330",
            "18.141.184.81:443",
            "83.13.251.149:8080",
            "181.52.85.249:36107",
            "70.230.224.110:3128",
            "116.107.244.35:6666",
            "20.119.120.226:59394",
            "37.194.226.31:55443",
            "192.248.125.3:80",
            "200.29.109.112:44749",
            "181.224.204.22:22800",
            "46.175.70.69:44239",
            "101.255.103.201:53281",
            "101.109.255.17:43501",
            "114.134.188.124:55667",
            "213.6.66.66:48687",
            "210.211.118.172:60000",
            "31.173.94.93:43539",
            "79.142.95.90:55443",
            "165.16.22.166:8080",
            "103.197.60.170:3128",
            "110.232.67.44:55443",
            "88.157.191.22:8000",
            "83.151.2.50:3128",
            "207.244.227.169:443",
            "101.99.95.54:80",
            "5.190.132.25:8080",
            "176.56.107.226:41053",
            "118.201.86.150:3128",
            "34.105.52.184:80",
            "149.210.235.107:5566",
            "202.154.180.53:46717",
            "34.138.225.120:8888",
            "18.136.120.48:443",
            "139.255.89.4:8080",
            "172.107.96.30:443",
            "187.49.70.238:8080",
            "20.94.230.158:80",
            "185.239.56.245:8083",
            "35.200.244.154:3128",
            "103.66.196.218:23500",
            "209.141.55.228:80",
            "103.149.162.194:80",
            "139.99.237.62:80",
            "157.119.234.50:80",
            "173.249.38.220:8118",
            "180.87.102.68:80",
            "45.199.148.4:80",
            "156.230.12.70:80",
            "88.157.191.21:8000",
            "194.5.193.183:80",
            "159.203.61.169:3128",
            "209.141.56.127:80",
            "47.242.183.4:8080",
            "176.9.75.42:8080",
            "47.75.90.57:80",
            "206.253.164.28:80",
            "194.233.73.104:443",
            "135.148.120.146:8088",
            "191.96.42.80:8080",
            "206.189.30.235:80",
            "38.94.111.208:80",
            "88.198.24.108:8080",
            "206.253.164.110:80",
            "206.253.164.101:80",
            "206.253.164.108:80",
            "5.252.161.48:8080",
            "88.198.50.103:8080",
            "005.252.161.48:8080",
            "199.19.225.250:80",
            "209.141.35.151:80",
            "121.78.139.75:80",
            "121.78.139.77:80",
            "183.81.126.167:4105",
            "194.233.81.171:80",
            "185.230.4.233:55443",
            "124.219.176.139:39589",
            "61.247.51.219:8080",
            "103.251.225.13:34052",
            "190.2.210.123:999",
            "82.200.107.98:3128",
            "195.225.230.50:8080",
            "103.216.103.25:80",
            "37.26.86.206:47464",
            "167.71.5.83:8080",
            "64.225.16.208:8080",
            "194.233.73.105:443",
            "163.53.209.8:6666",
            "103.47.200.5:80",
            "77.46.134.78:22800",
            "51.223.250.152:8080",
            "186.192.251.63:8080",
            "183.89.12.89:8080",
            "176.101.177.189:8080",
            "190.187.201.26:8080",
            "45.174.251.6:999",
            "177.73.112.178:9090",
            "38.123.68.152:999",
            "77.236.230.177:1256",
            "36.94.58.26:4480",
            "186.103.234.75:999",
            "203.189.89.153:8080",
            "36.92.93.61:8080",
            "45.174.249.2:999",
            "41.111.204.186:8080",
            "41.65.236.53:1981",
            "12.250.94.6:48678",
            "209.40.237.43:8080",
            "50.236.203.15:8080",
            "45.230.168.97:999",
            "139.255.70.162:8080",
            "110.74.203.250:8080",
            "118.67.219.153:8080",
            "185.200.39.5:8080",
            "176.52.218.213:8080",
            "115.147.46.109:8080",
            "200.97.233.125:8080",
            "170.245.55.234:8080",
            "201.20.80.115:666",
            "202.29.243.36:8081",
            "115.110.207.120:3128",
            "138.97.194.51:8080",
            "213.6.99.106:8080",
            "200.229.147.2:999",
            "139.255.70.172:8080",
            "45.167.124.57:999",
            "62.201.217.194:8080",
            "202.146.235.117:8080",
            "202.152.54.135:808",
            "103.94.122.14:8080",
            "62.27.108.174:8080",
            "190.128.225.116:999",
            "182.23.29.116:8080",
            "118.99.124.148:8080",
            "179.61.229.234:999",
            "188.143.40.170:8080",
            "103.132.53.176:3127",
            "103.124.87.1:8080",
            "156.200.110.117:1981",
            "156.200.116.74:1976",
            "200.30.170.82:8080",
            "165.16.27.13:1976",
            "77.236.236.44:8080",
            "154.70.165.130:3128",
            "193.106.138.52:3128",
            "144.217.75.65:8800",
            "209.146.19.59:55443",
            "153.121.36.194:8118",
            "54.89.68.93:80",
            "54.162.84.63:8080",
            "82.78.31.115:80",
            "05.252.161.48:8080",
            "47.57.30.255:59394",
            "135.181.49.81:34628",
            "58.26.138.168:80",
            "52.78.172.171:80",
            "58.26.138.170:80",
            "85.159.48.170:40014",
            "154.16.63.16:3128",
            "43.228.180.60:80",
            "80.48.119.28:8080",
            "58.26.138.171:80",
            "138.68.60.8:8080",
            "161.35.70.249:8080",
            "134.209.29.120:3128",
            "103.216.103.26:80",
            "31.204.180.44:53281",
            "18.179.120.38:80",
            "180.87.102.69:80",
            "81.163.37.225:55443",
            "80.59.199.213:8080",
            "103.105.49.53:80",
            "128.199.202.122:3128",
            "74.208.177.198:80",
            "69.58.104.245:80",
            "103.142.141.71:80",
            "46.4.96.137:3128",
            "169.239.188.61:48807",
            "167.71.199.71:80",
            "157.245.63.46:80",
            "185.61.152.137:8080",
            "194.233.69.90:443",
            "212.2.221.51:80",
            "74.141.186.101:80",
            "194.233.73.106:443",
            "45.199.148.2:80",
            "80.59.199.212:8080",
            "20.47.108.204:8888",
            "103.142.140.22:80",
            "199.19.224.3:80",
            "173.249.5.227:8080",
            "200.116.198.148:40711",
            "176.9.119.170:8080",
            "62.33.210.34:58918",
            "83.229.8.9:3127",
            "175.101.81.251:8080",
            "178.134.178.134:3128",
            "165.16.27.14:1976",
            "167.172.75.54:8080",
            "202.21.110.82:8020",
            "69.43.44.106:8080",
            "45.174.248.53:999",
            "206.0.9.18:8080",
            "146.120.214.9:8080",
            "159.65.189.145:8080",
            "199.19.226.12:80",
            "185.91.116.140:80",
            "185.243.14.153:8083",
            "206.253.164.122:80",
            "206.253.164.198:80",
            "95.111.225.137:443",
            "198.199.86.11:8080",
            "209.97.150.167:8080",
            "206.253.164.120:80",
            "206.253.164.146:80",
            "180.183.225.38:8080",
            "118.172.43.60:8080",
            "200.37.231.67:8080",
            "36.91.106.87:8089",
            "159.192.131.178:8080",
            "101.255.117.122:3128",
            "36.37.160.242:8080",
            "77.236.238.179:8080",
            "202.62.10.51:8080",
            "186.202.137.106:8080",
            "122.144.7.186:8080",
            "179.189.125.222:8080",
            "168.227.56.130:8080",
            "45.166.93.57:8080",
            "181.78.18.25:999",
            "157.230.177.3:999",
            "112.109.20.238:8080",
            "171.97.12.192:8080",
            "103.11.106.8:8181",
            "171.96.204.77:8080",
            "179.43.81.18:999",
            "14.102.13.193:8080",
            "31.128.71.241:8081",
            "103.153.230.2:80",
            "36.91.194.25:8080",
            "170.238.115.44:8080",
            "170.81.37.54:8080",
            "8.243.120.54:999",
            "198.229.231.13:8080",
            "78.157.39.50:80",
            "188.133.192.164:8081",
            "49.156.42.188:8080",
            "41.63.170.142:8080",
            "93.86.63.73:8080",
            "186.47.97.122:8080",
            "178.219.37.70:8080",
            "167.99.255.129:80",
            "158.140.167.148:53281",
            "180.250.153.130:53281",
            "113.160.156.111:80",
            "101.32.183.218:8118",
            "210.14.35.194:55443",
            "210.56.244.30:8080",
            "20.94.229.106:80",
            "154.236.179.226:1976",
            "93.183.235.94:53281",
            "52.149.152.236:80",
            "128.199.89.215:2052",
            "113.130.126.2:31932",
            "43.255.113.232:80",
            "34.145.126.174:80",
            "47.254.75.151:8181",
            "83.167.203.174:50128",
            "52.250.1.188:80",
            "139.59.1.14:3128",
            "41.180.18.58:8080",
            "43.229.254.76:80",
            "47.56.69.11:8000",
            "36.255.134.153:43948",
            "85.185.236.61:3128",
            "168.228.238.83:6969",
            "187.108.39.64:6666",
            "186.209.41.38:8080",
            "36.95.156.125:6969",
            "176.62.188.158:56351",
            "116.101.90.208:4004",
            "202.22.228.122:8118",
            "102.222.233.252:6969",
            "161.202.226.194:80",
            "78.84.14.122:53281",
        ]

    def set_detail_categories(self, use_ctg: list):
        url = 'http://browse.gmarket.co.kr/list?category='
        for ctg in self.categories_3:
            if ctg[1] in use_ctg:
                if 'http://category.gmarket.co.kr/listview' in ctg[3]:
                    res = requests.get(ctg[3])
                    soup = BeautifulSoup(res.text, 'html.parser')
                    if res.history:
                        continue

                    for detail_ctg in soup.find_all('a', class_=None, href=re.compile("category=")):
                        # 1차 / 2차 / 3차 / 4차 / url
                        # s = 8(판매량 순) / 7(지마켓 랭크순)
                        self.detail_categories.append([self.categories_1[ctg[0]], self.categories_2[ctg[1]][1],
                                                      ctg[2], detail_ctg.string, url+detail_ctg['href'].split('category=')[1][:9]+'&s=7'])

                elif 'category=' in ctg[3]:
                    # 1차 / 2차 / 3차 / - / url
                    self.detail_categories.append(
                        [self.categories_1[ctg[0]], self.categories_2[ctg[1]][1], ctg[2], '-', url+ctg[3].split('category=')[1][:9]+'&s=8'])
                else:
                    print("ERROR!!!!")

    def get_crawl(self, crawl_count: int, min_sale_count: int):
        cnt = 0
        for dtl in self.detail_categories:
            cnt += 1
            print(len(self.detail_categories), "개 중에", cnt, "개 진행중!!")
            while True:
                try:
                    proxy_server = choice(self.proxy_server_list)
                    proxies = {"http": proxy_server, 'https': proxy_server}
                    res = requests.get(dtl[4], timeout=60, proxies=proxies).text
                    soup = BeautifulSoup(res, 'html.parser')
                    break
                except:
                    self.proxy_server_list.remove(proxy_server)
                    print(f'proxy len: {len(self.proxy_server_list)}')
                    if len(self.proxy_server_list) < 10:
                        self.proxy_server_list = Gmarket().proxy_server_list

            box_div = soup.find('div', class_="box__component-itemcard")
            if box_div == None:
                print(f'"{dtl[3]}" 카테고리에 아무런 상품이 없습니다...')
                continue

            item = Item()
            c = 1
            for i in range(crawl_count):
                print(crawl_count, "중에", c, "번째 항목 조회")
                c += 1
                try:
                    item.sale_count = int(box_div.find(
                        'li', class_="list-item__pay-count").span.contents[-1].replace(',', ''))
                except:
                    item.sale_count = 0

                if item.sale_count < min_sale_count:
                    print(min_sale_count, "보다 적어서 다음 카테고리로...")
                    break

                item.title = box_div.find('span', class_="text__item")['title']

                try:
                    item.review_count = int(box_div.find(
                        'li', class_="list-item__feedback-count").contents[1].contents[2].replace(',', ''))
                except:
                    item.review_count = 0
                item.url = box_div.find('a', class_="link__item")["href"]

                # 1차 / 2차 / 3차 / 4차 / 아이템명 / 판매량 / 리뷰수 / 주소
                self.result.append([dtl[0], dtl[1], dtl[2], dtl[3], item.title,
                                   item.sale_count, item.review_count, item.url])

                box_div = box_div.next_sibling
                if box_div == None:
                    print(f'"{dtl[3]}" 카테고리에 더 이상 상품이 없습니다...')
                    break

    def save_data(self, num):
        with open(f'GMarket_1126_{num}.csv', 'w', encoding='utf-8', newline='') as f:
            wr = csv.writer(f)
            for row in self.result:
                wr.writerow(row)

def crawl(num):
    gmk = Gmarket('')
    print("초기화 OK!!")
    # 9, 10, 11, 14, 15, 18, 19
    gmk.set_detail_categories([num])
    print("상세 카테고리 조회 OK!!")
    gmk.get_crawl(25, 0)
    print("크롤링 OK!!")
    gmk.save_data(num)
    print("저장 OK!!")

if __name__ == '__main__':
    ctg = [15, 16, 17]
    pool = Pool(processes=7)
    pool.map(crawl, ctg)